[package]
name = "orion-client"
version = "0.1.0"
authors = ["Tei Roberts <ten3roberts@gmail.com>"]
edition = "2018"


[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
orion-shared = { path = "../shared" }
wasm-bindgen = "0.2.63"
wasm-bindgen-futures = "0.4"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

glam.workspace = true
rand.workspace = true
anyhow.workspace = true
itertools.workspace = true

getrandom = { version = "0.2.8", features = ["js"] }
web-sys = { version = "0.3.61", features = [
    "Element",
    "CanvasRenderingContext2d",
    "Document",
    "HtmlDocument",
    "HtmlCanvasElement",
    "Window",
] }

# quinn = { version = "0.9", default_features = false, features = [
#     "ring",
#     "rustls",
# ] }
# rustls = "0.20"
winit = "0.28"

wgpu = { version = "0.15", features = ["webgl"] }


tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["time", "env-filter"] }
tracing-web = "0.1"
time = { version = "0.3", features = ["wasm-bindgen"] }


[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
